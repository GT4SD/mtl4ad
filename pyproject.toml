[tool.poetry]
name = "mtl4ad"
version = "0.0.1"
description = "Repository to fine-tune various LLMs architectures for AD on a multi-task datasets."
authors = ["Yves Gaetan Nana Teukam <yves.g.nana@gmail.com>"]
readme = "README.md"
packages = [{include = "mtl4ad", from="src"}]
include = ["mtl4ad/py.typed"]

[tool.poetry_bumpversion.file."src/mtl4ad/__init__.py"]

[tool.license]
text = """
MIT License

Copyright (c) 2024 GT4SD team

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.10"
absl-py = '^2.1.0'
datasets = '^2.18.0'
deepspeed = '0.13.1'  # to avoid serialization errors when saving checkpoints
evaluate = '^0.4.1'
loguru = '^0.7.2'
mlflow = '^2.11.1'
nltk = '^3.8.1'
peft = '^0.9.0'
rdkit = '^2023.9.5'
rouge-score = '^0.1.2'
tqdm = '^4.25.0'
importlib-resources = "^6.3.1"
pandas = "^2.2.1"
transformers = "^4.39.3"
sacrebleu = "^2.4.2"

python-levenshtein = "0.25.1"
trl = "^0.9.4"
bitsandbytes = "^0.43.1"
[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
mypy = "^1.0.0"
pytest = "^6.2.5"
pytest-cov = "^2.8.1"
ruff = "^0.1.3"
types-setuptools = "^57.4.14"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = false
exclude = 'models/'

[[tool.mypy.overrides]]
module = [
    "Levenshtein.*",
    "datasets.*",
    "evaluate.*",
    "importlib-resources.*",
    "pandas.*",
    "peft.*",
    "pynvml.*",
    "rdkit.*",
    "transformers.*",
    "tqdm.*"
]
ignore_missing_imports = true

[tool.ruff]
# Include also Jupyter notebooks.
extend-include = ["*.ipynb"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
preview = true
select = [
    "E4", 
    "E7", 
    "E9", 
    "F", 
    "W291", 
    "W292", 
    "W505", 
    "E721",
    "I",
    "N801",
    "N802",
    "N803",
    "N804",
    "N805",
    "N806",
    "N816",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D300",
    "UP010",
    "UP011",
    "UP019",
    "UP032",
    "ARG",
    "PTH",
    "LOG001",
    "LOG002",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
preview = true
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
